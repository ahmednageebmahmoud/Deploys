{"version":3,"sources":["./src/models/fop/fop.paging.mode.ts","./src/models/fop/fop.model.ts","./src/models/fop/fop.paging.limt.model.ts","./src/models/fop/fop.sort.model.ts"],"names":[],"mappings":"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","file":"default~financial-transfares-module~freights-module~reports-module~sector-sales-module~settings-modu~46c0bdaf.js","sourcesContent":["import { FopPagingLimtModel } from './fop.paging.limt.model';\r\nimport { LocalStorageService } from '../../services/local.storage.service';\r\n\r\n/**\r\n* هذة الكلاس هيا مهمتها القيام بعمليات التقسيم للعناصر والتنقل بين الصفح وخلافة من هذا القبيل\r\n *\r\n */\r\n\r\nexport class FopPagingModel {\r\n    itemsCount: number;\r\n    takeItemsCount: number;\r\n    pagingLimt: FopPagingLimtModel;\r\n    to: number;\r\n    from: number;\r\n    allowNextPage: boolean;\r\n    allowPreviousPage: boolean;\r\n    pages: number[];\r\n    pagesSeliceTakeDefault: number = 5;\r\n    pagesSeliceSkipDefault: number = 0;\r\n    pagesSeliceTake: number;\r\n    pagesSeliceSkip: number;\r\n    currentPage: number;\r\nisRequestingToServer:boolean;\r\n/** Disble If No More Items In The Server */\r\ndisableGetMoreButton:boolean;\r\n    //change count item displayed \r\n    changeCountItemDisplaying(countResultDisplay) {\r\n        //Save Last Take Count In Local Storage\r\n        LocalStorageService.fopNumberOfDisplayResultInPage = countResultDisplay;\r\n\r\n        //if -1 as all items\r\n        if (countResultDisplay == -1)\r\n            countResultDisplay = this.itemsCount;\r\n\r\n        this.takeItemsCount = countResultDisplay;\r\n\r\n        //change limit items\r\n        this.pagingLimt.skip = 0;\r\n        this.pagingLimt.take = countResultDisplay;\r\n\r\n        //reset pages number\r\n        this.pagination(this.itemsCount, countResultDisplay);\r\n\r\n        //got page number 1\r\n        this.gotoPage(1, true);\r\n    };\r\n\r\n    //go to page by page number \r\n    gotoPage(pageNum: number, resetPages: boolean = false) {\r\n        //Now we calculate and for limit items \r\n        /*\r\n        The equation:\r\n        vrtialTake =  pageNum * currentTake\r\n        Skip =vrtialTake-  currentTake\r\n        */\r\n\r\n        var vrtialTake = pageNum * this.takeItemsCount;\r\n        this.pagingLimt.skip = vrtialTake - (this.takeItemsCount);\r\n        this.pagingLimt.take = this.takeItemsCount * pageNum;\r\n\r\n        //change paging lable\r\n        this.resetPaging(pageNum, resetPages);\r\n    };\r\n\r\n    //change Paging numbers \r\n    resetPaging(pageNum: number, resetPages: boolean = false) {\r\n        //reset page num to default if falsy\r\n        if (!pageNum)\r\n            pageNum = 1;\r\n        var vrtialTo = pageNum * this.pagingLimt.take;\r\ndebugger;\r\n        //rewset showing for lable\r\n        this.to = vrtialTo > this.itemsCount ? this.itemsCount : vrtialTo;;\r\n        this.from = !this.itemsCount ? 0 : this.pagingLimt.skip + 1;\r\n\r\n        //reset allow buttons newxt and Previous\r\n        this.allowNextPage = pageNum + 1 <= this.pages.length;\r\n        this.allowPreviousPage = pageNum - 1 >= 1;\r\n\r\n        if (resetPages) {\r\n            this.pagesSeliceTake = this.pagesSeliceTakeDefault;\r\n            this.pagesSeliceSkip = this.pagesSeliceSkipDefault;\r\n        }\r\n\r\n        //reset showing pages number\r\n        if (this.pages.length + 1 != this.pagesSeliceTakeDefault) {\r\n\r\n            //الغرض هوا جلب نفس مجموعة الصفح الذى تعرض الان\r\n            var pagesVrtial = [...this.pages].splice(this.pagesSeliceSkip, this.pagesSeliceTakeDefault);\r\n            //نتحقق هل الرقم الصفحة التى بعد بعد صفحة المستخدم موجود ام لاء وفى هذة الحالة هوا يذهب للامام \r\n            var findNextPageIndex = pagesVrtial.findIndex(p => p == pageNum + 1);\r\n            //  نتحقق هل الرقم الصفحة التى قبل قبل صفحة المستخدم موجود ام لا وفى هذة الحالة هوا يرجع للخلف \r\n            var findPreviousIndex = pagesVrtial.findIndex(p => p == pageNum - 1);\r\n\r\n            //اذا كانت ليست موجود والصفحة هى ليست آخر صفحة نزيد معدل الاخفاء عرض الصفح \r\n            if (findNextPageIndex == -1 && this.allowNextPage)\r\n                this.pagesSeliceSkip += 2;\r\n\r\n            //اذا كانت الصفحة السابقة والصفحة هى ليست اول صفحة ليست موجودة ننقص معدل الاخفاء\r\n            else if (findPreviousIndex == -1 && this.allowPreviousPage)\r\n                this.pagesSeliceSkip -= 2;\r\n            this.pagesSeliceTake = (this.pagesSeliceSkip + this.pagesSeliceTakeDefault);\r\n\r\n        }\r\n\r\n        //set current page for active class\r\n        this.currentPage = pageNum;\r\n\r\n    };\r\n\r\n    //Go next Page\r\n    gotoNextPage() {\r\n        if (this.allowNextPage)\r\n            this.gotoPage(this.currentPage + 1);\r\n    };\r\n\r\n    //Go previous Page\r\n    gotoPreviousPage() {\r\n        if (this.allowPreviousPage)\r\n            this.gotoPage(this.currentPage - 1);\r\n    };\r\n\r\n\r\n    /**\r\n    * هذة الوظيفة من اجالة اعادة انشاء ترقيم الصفحات\r\n    *  ستم المداء عليها فى حالة زيادة او نقصاد عدد العناصر\r\n     * @param {Number} itemsCount عدد العناصر\r\n     * @param {Number} currentTake عدد العناصر المراد عرضها فى الصفحة الواحدة\r\n     */\r\n    pagination(itemsCount: number, currentTake: number, notTrdrtPsging: boolean = false) {\r\n        /*\r\n    The equation:\r\n    pagesCount= itemsCount / currentTake;\r\n    */\r\n\r\n   var pages = [];\r\n        var pagesCount = itemsCount / currentTake;\r\n        for (var i = 0; i < pagesCount; i++) {\r\n            pages.push(i + 1);\r\n        }\r\n        this.pages = pages;\r\n        if (itemsCount != this.itemsCount) {\r\n            this.itemsCount = itemsCount;\r\n            this.pages = pages;\r\n            this.resetPaging(1);\r\n\r\n        } else {\r\n            this.itemsCount = itemsCount;\r\n\r\n            if (notTrdrtPsging)\r\n                this.resetPaging(this.currentPage);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * هذة الكلاس هيا مهمتها القيام بعمليات التقسيم للعناصر والتنقل بين الصفح وخلافة من هذا القبيل\r\n     * @param {Number} from من\r\n     * @param {Number} to الى \r\n     * @param {Number} countItems جميع عدد العناصر\r\n     * @param {Number} currentPage رقم الصفحة الحالية\r\n     * @param {bool} allowNextPage السماح بتفعيل زر الصفحة القادة\r\n     * @param {bool} allowPreviousPage السماح بتفعيل زر الصفحة السابقة\r\n        * @param {number} pagesSeliceTakeC عدد ارقام الصفح التى سوف تعرض للمستخدم للتنقل بينهم\r\n     * @param {number} pagesSeliceSkipC عدد ارفام الصفحة التى سوف نتخطبها على المستخدم\r\n     * @param {Number[]} pages ارقام الصفح\r\n     * @param {PagingLimt} pagingLimt الحدود\r\n    \t\r\n     */\r\n    constructor(from: number, to: number, takeItemsCount: number, itemsCount: number, currentPage: number, allowNextPage: boolean,\r\n        allowPreviousPage: boolean, pagesSeliceTake: number, pagesSeliceSkip: number) {\r\n        this.from = from;\r\n        this.to = to;\r\n        this.takeItemsCount = takeItemsCount;\r\n        this.itemsCount = itemsCount;\r\n        this.currentPage = currentPage;\r\n        this.allowNextPage = allowNextPage;\r\n        this.allowPreviousPage = allowPreviousPage;\r\n        this.pagesSeliceTake = pagesSeliceTake;\r\n        this.pagesSeliceSkip = pagesSeliceSkip;\r\n        this.pagingLimt = new FopPagingLimtModel(0, takeItemsCount);;\r\n        this.pagination(itemsCount, takeItemsCount);\r\n    }\r\n}","import { FopSortModel } from \"./fop.sort.model\";\r\nimport { LocalStorageService } from \"src/services/local.storage.service\"\r\nimport { FopPagingModel } from \"./fop.paging.mode\";\r\n\r\n/**\r\n     * FOP : Filter OrderBy Paging\r\n *\r\n */\r\n\r\nexport class FOPModel {\r\n    numberOfDisplayResiltInPage: number;\r\n    paging: FopPagingModel;\r\n    reFop(itemsCount: number, numberOfDisplayResiltInPage: number = this.numberOfDisplayResiltInPage) {\r\n        this.itemsCount = itemsCount >= 0 ? itemsCount : this.itemsCount;\r\n        this.numberOfDisplayResiltInPage = numberOfDisplayResiltInPage;\r\n        this.paging.pagination(this.itemsCount, this.numberOfDisplayResiltInPage);\r\n\r\n    }\r\n\r\n    /**\r\n     *  FOP : Filter OrderBy Paging\r\n     * @param {number} itemsCount  مجموع عدد العناصر التالية\r\n     * @param {number} currentPageNumber رقم الصفحة الحالية\r\n     * @param {number} pagesSeliceTakeC عدد ارقام الصفح التى سوف تعرض للمستخدم للتنقل بينهم \r\n     * @param {number} pagesSeliceSkipC عدد ارفام الصفحة التى سوف نتخطبها على المستخدم\r\n     */\r\n\r\n    constructor(\r\n        public fieldNames: string[] = [],\r\n        public itemsCount: number = 0,\r\n        currentPageNumber: number = 1,\r\n        pagesSeliceTake: number = 5,\r\n        pagesSeliceSkip: number = 0,\r\n        public sort: FopSortModel = new FopSortModel()) {\r\n        //نقوم بـ التالى بحيث عند تزويد الداتا لا نرحع الى اول صفحة لا نثق عند آخر صفحة وايضا نظهر نفس مجموعة ارقام الصفح\r\n        let currentPageNo = currentPageNumber;\r\n\r\n\r\n        let displayEntiriesCount = LocalStorageService.fopNumberOfDisplayResultInPage;\r\n        //Check If User Want Display All Item In One Page\r\n        if (displayEntiriesCount == -1)\r\n            this.numberOfDisplayResiltInPage = this.itemsCount;\r\n        else\r\n            this.numberOfDisplayResiltInPage = displayEntiriesCount || 10;\r\n\r\n        //Paging\r\n        this.paging = new FopPagingModel(\r\n            //From\r\n            this.itemsCount == 0 ? 0 : 1,\r\n            //To\r\n             this.numberOfDisplayResiltInPage > this.itemsCount ? this.itemsCount : this.numberOfDisplayResiltInPage, \r\n             this.numberOfDisplayResiltInPage, itemsCount, currentPageNo, true, false, pagesSeliceTake, pagesSeliceSkip);\r\n\r\n\r\n    }\r\n}","\r\n/**\r\n * Paging Limt class\r\n */\r\nexport class FopPagingLimtModel {\r\n\ttake:number;\r\n\tskip:number;\r\n\tlimitOptions:any[];\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} skip skip items\r\n\t * @param {number} take take items\r\n\t * @param {string} allName name from resources\r\n\t */\r\n\tconstructor(skip :number=0, take:number=10) {\r\n\t\tthis.skip = skip,\r\n\t\t\tthis.take = take;\r\n        this.limitOptions = [{ limit: 5, name: '5' },\r\n        { limit: 10, name: '10' },\r\n        { limit: 20, name: '20' },\r\n        { limit: 70, name: '70' },\r\n        { limit: 100, name: '100' },\r\n        { limit: -1, name: 'All' }];\r\n\t}\r\n}\r\n   ","/**\r\n * sort items \r\n */\r\n\r\nexport class FopSortModel {\r\n\r\n\tfieldName:string;\r\n\treverse:boolean;\r\n\r\n\t//set property name for sort\r\n\tsortBy(_fieldName) {\r\n\t\tif (_fieldName === this.fieldName)\r\n\t\t\tthis.reverse = !this.reverse;\r\n\t\telse\r\n\t\t\tthis.reverse = true;\r\n\r\n\t\tthis.fieldName = _fieldName;\r\n\t};\r\n\r\n\t//check from sort case and name for set specific class\r\n\tifSortClass(fieldName, sortCase) {\r\n\t\treturn this.fieldName === fieldName && this.reverse == sortCase;\r\n\t};\r\n\r\n\t/**\r\n\t * sort items \r\n\t * @param {String} propName اسم البروبرتى الافتراية \r\n\t * @param {Bool} reverse طريقة الترتيب الافتراضية \r\n\t */\r\n\tconstructor(fieldName:string=null, reverse:boolean=null) {\r\n\t\tthis.fieldName = fieldName;\r\n\t\tthis.reverse = reverse;\r\n\t}\r\n}"],"sourceRoot":"webpack:///"}